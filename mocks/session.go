// Code generated by MockGen. DO NOT EDIT.
// Source: dao/session.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/sblausten/time-tracker/models"
)

// MockSessionDaoInterface is a mock of SessionDaoInterface interface.
type MockSessionDaoInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSessionDaoInterfaceMockRecorder
}

// MockSessionDaoInterfaceMockRecorder is the mock recorder for MockSessionDaoInterface.
type MockSessionDaoInterfaceMockRecorder struct {
	mock *MockSessionDaoInterface
}

// NewMockSessionDaoInterface creates a new mock instance.
func NewMockSessionDaoInterface(ctrl *gomock.Controller) *MockSessionDaoInterface {
	mock := &MockSessionDaoInterface{ctrl: ctrl}
	mock.recorder = &MockSessionDaoInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionDaoInterface) EXPECT() *MockSessionDaoInterfaceMockRecorder {
	return m.recorder
}

// BuildSessionIndexes mocks base method.
func (m *MockSessionDaoInterface) BuildSessionIndexes() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "BuildSessionIndexes")
}

// BuildSessionIndexes indicates an expected call of BuildSessionIndexes.
func (mr *MockSessionDaoInterfaceMockRecorder) BuildSessionIndexes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildSessionIndexes", reflect.TypeOf((*MockSessionDaoInterface)(nil).BuildSessionIndexes))
}

// GetAllSessions mocks base method.
func (m *MockSessionDaoInterface) GetAllSessions(userId string) ([]models.Session, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllSessions", userId)
	ret0, _ := ret[0].([]models.Session)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllSessions indicates an expected call of GetAllSessions.
func (mr *MockSessionDaoInterfaceMockRecorder) GetAllSessions(userId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllSessions", reflect.TypeOf((*MockSessionDaoInterface)(nil).GetAllSessions), userId)
}

// InsertSession mocks base method.
func (m *MockSessionDaoInterface) InsertSession(session models.Session) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertSession", session)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertSession indicates an expected call of InsertSession.
func (mr *MockSessionDaoInterfaceMockRecorder) InsertSession(session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertSession", reflect.TypeOf((*MockSessionDaoInterface)(nil).InsertSession), session)
}
